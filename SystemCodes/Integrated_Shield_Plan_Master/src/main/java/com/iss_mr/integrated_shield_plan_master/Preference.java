package com.iss_mr.integrated_shield_plan_master;

/**
 * This class was automatically generated by the data modeler tool.
 */

public class Preference implements java.io.Serializable {

	static final long serialVersionUID = 1L;

	@org.kie.api.definition.type.Label("Pre Hospitalisation Covered Days")
	private PreferenceMatrix preHospitalisationCoveredDays;
	@org.kie.api.definition.type.Label("Post Hospitalisation Covered Days")
	private PreferenceMatrix postHospitalisationCoveredDays;
	@org.kie.api.definition.type.Label("Policy Year Limit")
	private PreferenceMatrix policyYearLimit;
	@org.kie.api.definition.type.Label("Community Hospital")
	private PreferenceMatrix communityHospital;
	@org.kie.api.definition.type.Label("Major Organ Transplant")
	private PreferenceMatrix majorOrganTransplant;
	@org.kie.api.definition.type.Label("Critical Illnesses")
	private PreferenceMatrix criticalIllnesses;
	@org.kie.api.definition.type.Label("Prosthesis")
	private PreferenceMatrix prosthesis;
	@org.kie.api.definition.type.Label("Emergency overseas treatment")
	private PreferenceMatrix emergencyOverseasTreatment;
	@org.kie.api.definition.type.Label("Claims Processing Duration")
	private PreferenceMatrix claimsProcessingDuration;

	@org.kie.api.definition.type.Label("Post Hospitalisation Coverage")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix postHospitalisationCoverage;

	@org.kie.api.definition.type.Label("Pre Hospitalisation Coverage")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix preHospitalisationCoverage;

	@org.kie.api.definition.type.Label("co-insurance")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix coinsurance;

	@org.kie.api.definition.type.Label("Deductible")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix deductible;

	@org.kie.api.definition.type.Label("Non Panel Surcharge")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix nonPanelSurcharge;

	@org.kie.api.definition.type.Label("Co-pay Capped At")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix coPayCappedAt;

	@org.kie.api.definition.type.Label("surgery")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix surgery;

	@org.kie.api.definition.type.Label(value = "premium")
	private com.iss_mr.integrated_shield_plan_master.PreferenceMatrix premium;

	public Preference() {
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getPreHospitalisationCoveredDays() {
		return this.preHospitalisationCoveredDays;
	}

	public void setPreHospitalisationCoveredDays(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix preHospitalisationCoveredDays) {
		this.preHospitalisationCoveredDays = preHospitalisationCoveredDays;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getPostHospitalisationCoveredDays() {
		return this.postHospitalisationCoveredDays;
	}

	public void setPostHospitalisationCoveredDays(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix postHospitalisationCoveredDays) {
		this.postHospitalisationCoveredDays = postHospitalisationCoveredDays;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getPolicyYearLimit() {
		return this.policyYearLimit;
	}

	public void setPolicyYearLimit(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix policyYearLimit) {
		this.policyYearLimit = policyYearLimit;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getCommunityHospital() {
		return this.communityHospital;
	}

	public void setCommunityHospital(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix communityHospital) {
		this.communityHospital = communityHospital;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getMajorOrganTransplant() {
		return this.majorOrganTransplant;
	}

	public void setMajorOrganTransplant(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix majorOrganTransplant) {
		this.majorOrganTransplant = majorOrganTransplant;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getCriticalIllnesses() {
		return this.criticalIllnesses;
	}

	public void setCriticalIllnesses(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix criticalIllnesses) {
		this.criticalIllnesses = criticalIllnesses;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getProsthesis() {
		return this.prosthesis;
	}

	public void setProsthesis(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix prosthesis) {
		this.prosthesis = prosthesis;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getEmergencyOverseasTreatment() {
		return this.emergencyOverseasTreatment;
	}

	public void setEmergencyOverseasTreatment(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix emergencyOverseasTreatment) {
		this.emergencyOverseasTreatment = emergencyOverseasTreatment;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getClaimsProcessingDuration() {
		return this.claimsProcessingDuration;
	}

	public void setClaimsProcessingDuration(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix claimsProcessingDuration) {
		this.claimsProcessingDuration = claimsProcessingDuration;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getPostHospitalisationCoverage() {
		return this.postHospitalisationCoverage;
	}

	public void setPostHospitalisationCoverage(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix postHospitalisationCoverage) {
		this.postHospitalisationCoverage = postHospitalisationCoverage;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getPreHospitalisationCoverage() {
		return this.preHospitalisationCoverage;
	}

	public void setPreHospitalisationCoverage(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix preHospitalisationCoverage) {
		this.preHospitalisationCoverage = preHospitalisationCoverage;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getCoinsurance() {
		return this.coinsurance;
	}

	public void setCoinsurance(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix coinsurance) {
		this.coinsurance = coinsurance;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getDeductible() {
		return this.deductible;
	}

	public void setDeductible(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix deductible) {
		this.deductible = deductible;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getNonPanelSurcharge() {
		return this.nonPanelSurcharge;
	}

	public void setNonPanelSurcharge(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix nonPanelSurcharge) {
		this.nonPanelSurcharge = nonPanelSurcharge;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getCoPayCappedAt() {
		return this.coPayCappedAt;
	}

	public void setCoPayCappedAt(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix coPayCappedAt) {
		this.coPayCappedAt = coPayCappedAt;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getSurgery() {
		return this.surgery;
	}

	public void setSurgery(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix surgery) {
		this.surgery = surgery;
	}

	public com.iss_mr.integrated_shield_plan_master.PreferenceMatrix getPremium() {
		return this.premium;
	}

	public void setPremium(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix premium) {
		this.premium = premium;
	}

	public Preference(
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix preHospitalisationCoveredDays,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix postHospitalisationCoveredDays,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix policyYearLimit,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix communityHospital,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix majorOrganTransplant,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix criticalIllnesses,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix prosthesis,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix emergencyOverseasTreatment,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix claimsProcessingDuration,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix postHospitalisationCoverage,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix preHospitalisationCoverage,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix coinsurance,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix deductible,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix nonPanelSurcharge,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix coPayCappedAt,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix surgery,
			com.iss_mr.integrated_shield_plan_master.PreferenceMatrix premium) {
		this.preHospitalisationCoveredDays = preHospitalisationCoveredDays;
		this.postHospitalisationCoveredDays = postHospitalisationCoveredDays;
		this.policyYearLimit = policyYearLimit;
		this.communityHospital = communityHospital;
		this.majorOrganTransplant = majorOrganTransplant;
		this.criticalIllnesses = criticalIllnesses;
		this.prosthesis = prosthesis;
		this.emergencyOverseasTreatment = emergencyOverseasTreatment;
		this.claimsProcessingDuration = claimsProcessingDuration;
		this.postHospitalisationCoverage = postHospitalisationCoverage;
		this.preHospitalisationCoverage = preHospitalisationCoverage;
		this.coinsurance = coinsurance;
		this.deductible = deductible;
		this.nonPanelSurcharge = nonPanelSurcharge;
		this.coPayCappedAt = coPayCappedAt;
		this.surgery = surgery;
		this.premium = premium;
	}

}