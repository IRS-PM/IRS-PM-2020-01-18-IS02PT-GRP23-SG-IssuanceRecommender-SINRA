package com.iss_mr.optaisp;

global org.optaplanner.core.api.score.buildin.hardsoft.HardSoftScoreHolder scoreHolder;
// ############################################################################
// Hard constraints
// ############################################################################

rule "Hard last entry age"
    when
        $policy : Policy($lastEntryAge:lastEntryAge )
        Preference ($requiredAge:requiredAge)
        exists Preference(policy == $policy)
    then
        scoreHolder.penalize(kcontext, $requiredAge - $lastEntryAge);
end

// ############################################################################
// Soft constraints
// ############################################################################



rule "Post Hospitalisation covered days"
    when
        $policy : Policy($postHospitalisationCoveredDays : postHospitalisationCoveredDays)
        Preference ($requiredPostHospitalisationCoveredDays:requiredPostHospitalisationCoveredDays)
        exists Preference(policy == $policy)
    then
        scoreHolder.penalize(kcontext, $requiredPostHospitalisationCoveredDays - $postHospitalisationCoveredDays);
end

rule "Pre Hospitalisation covered days"
when
        $policy : Policy($preHospitalisationCoveredDays : preHospitalisationCoveredDays)
        Preference ($requiredPreHospitalisationCoveredDays:requiredPreHospitalisationCoveredDays)
        exists Preference(policy == $policy)
    then
        scoreHolder.penalize(kcontext, $requiredPreHospitalisationCoveredDays - $preHospitalisationCoveredDays );
end